{
  "openapi": "3.0.0",
  "info": {
    "title": "SOLID introduction challenge",
    "description": "This is an API create for a NodeJS Bootcamp Challenge",
    "version": "1.0.0",
    "contact": {
      "email": "john.vitor.dss@gmail.com"
    }
  },
  "paths": {
    "/users": {
      "summary": "path used to create an user and list all users",
      "description": "path used to create an user and list all users",
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a new user",
        "description": "Create a new user if the e-mail is not already in use",
        "operationId": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "User name",
                  "email": "User email"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "Email is already in use"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns all the users",
        "description": "Returns all the users if and user admin ID has been passed to the headers as user_id",
        "parameters": [
          {
            "in": "header",
            "name": "user_id",
            "required": true,
            "description": "id of an admin user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "name": "User name",
                      "email": "User email"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User has no permissions"
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Turn a normal user into an admin",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the user with the admin property equals true",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "user does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "user does not exist"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user info by user id",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "name": "user name",
                    "email": "email@email.com"
                  }
                }
              }
            }
          },
          "404": {
            "description": "user does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "user does not exist"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}